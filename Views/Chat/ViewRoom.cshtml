@model RoomViewModel

@{
	bool canRead = (Model.Perks & RoomPerks.Read) == RoomPerks.Read;
	bool canWrite = (Model.Perks & RoomPerks.Write) == RoomPerks.Write;
	bool canDeleteSomeonesMessage = (Model.Perks & RoomPerks.DeleteSomeonesMessage) == RoomPerks.DeleteSomeonesMessage;
}

<div class="flex-grow-1 bg-dark d-flex flex-column" style="--bs-bg-opacity: .95;max-height:100%">
	@if (Model.Room != null)
	{
		<div id="chat-messages" class="mx-2 flex-grow-1 d-flex flex-column align-items-start gap-2 overflow-auto scrollbar">
			@foreach (Message message in Model.Room.Messages)
			{
				@if (message.SenderId == @Model.CurrentUserId)
				{
					<div class="message message-my align-self-end d-flex flex-column text-white position-relative"
				 style="max-width:600px;min-width:100px">
						<div class="show-on-hover">
							<form class="d-flex flex-row gap-1 position-absolute top-0 start-0 translate-middle" style="margin-left:40px"
							method="post" asp-controller="Chat">
								<input hidden name="messageId" value="@message.Id" />
								<input hidden name="roomId" value="@Model.Room.Id" />
								<button asp-action="DeleteMessage" type="submit" class="btn btn-link text-info p-1"
									style="--bs-text-opacity: .5">
									<i class="fa-solid fa-trash"></i>
								</button>
								<a asp-action="EditMessage" type="submit" class="btn btn-link text-info p-1" asp-route-roomId="@Model.Room.Id"
						 asp-route-messageId="@message.Id" style="--bs-text-opacity: .5">
									<i class="fa-solid fa-pen"></i>
								</a>
							</form>
						</div>
						<span class="text-break">@message.Text</span>
						<span class="text-info align-self-end" style="--bs-text-opacity: .5;font-size:small">
							@if (@message.WasEdited)
							{
								<text>edit.</text>
							}
							@message.Timestamp.ToShortTimeString()
						</span>
					</div>
				}
				else if (canRead)
				{
					<div class="message d-flex flex-column bg-dark text-white position-relative"
				 style="max-width:600px;min-width:100px">
						@if (canDeleteSomeonesMessage)
						{
							<div class="show-on-hover">
								<form class="d-flex flex-row-reverse gap-1 position-absolute top-0 start-100 translate-middle"
							style="padding-right:50px" method="post" asp-controller="Chat">
									<input hidden name="messageId" value="@message.Id" />
									<input hidden name="roomId" value="@Model.Room.Id" />
									<button asp-action="DeleteMessage" type="submit" class="btn btn-link text-info p-1"
									style="--bs-text-opacity: .5">
										<i class="fa-solid fa-trash"></i>
									</button>
								</form>
							</div>
						}
						<span class="text-info fw-bold" style="--bs-text-opacity: .75;">@message.Sender.UserName</span>
						<span class="text-break">@message.Text</span>
						<span class="text-info align-self-end" style="--bs-text-opacity: .5;font-size:small">
							@if (@message.WasEdited)
							{
								<text>edit.</text>
							}
							@message.Timestamp.ToShortTimeString()
						</span>
					</div>
				}
			}
		</div>

		if (canWrite)
		{
			@await Html.PartialAsync("_MessageInputForm", model: @Model.Room.Id )
			;
		}
	}
</div>